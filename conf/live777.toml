[http]
# Http Server Listen Address
# listen = "[::]:7777"
# Cross-Origin Resource Sharing (CORS)
# reference: https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS
# cors = false

[[ice_servers]]
urls = [
    "stun:stun.22333.fun",
    "stun:cn.22333.fun",
    "stun:stun.l.google.com:19302",
]

[recorder]
# Stream name patterns for auto-recording, supports wildcards
auto_streams = ["*"] # Record all streams

# Storage backend configuration
[recorder.storage]
# Local filesystem (default)
type = "fs"
root = "./records"

# AWS S3 with explicit credentials
#type = "s3"
#bucket = "my-live777-bucket"
#root = "/recordings"
#region = "us-east-1"
#access_key_id = "AKIAIOSFODNN7EXAMPLE"
#secret_access_key = "wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY"

# AWS S3 with IAM role (recommended for EC2/ECS)
#type = "s3"
#bucket = "my-live777-bucket"
#root = "/recordings"
#region = "us-east-1"

# Alibaba Cloud OSS
#type = "oss"
#bucket = "my-oss-bucket"
#root = "/recordings"
#region = "oss-cn-hangzhou"
#endpoint = "https://oss-cn-hangzhou.aliyuncs.com"
#access_key_id = "your-access-key"
#access_key_secret = "your-access-secret"    

# [[ice_servers]]
# urls = [ "turn:turn.22333.fun", "turn:cn.22333.fun" ]
# username = "live777"
# credential = "live777"

# WHIP/WHEP auth token
# Headers["Authorization"] = "Bearer {token}"
# [auth]
# JSON WEB TOKEN secret
# secret = "<jwt_secret>"
# static JWT token, superadmin, debuggger can use this token
# tokens = ["live777"]

[log]
# Env: `LOG_LEVEL`
# Default: info
# Values: off, error, warn, info, debug, trace
# level = "warn"

[strategy]
# If not set, use default u16::MAX
# Default: 65535
# each_stream_max_sub = 1
# If cascade push is beginning, close all subscriber
# cascade_push_close_sub = false

# WHIP auto a stream
# auto_create_whip = true
# WHEP auto a stream
# auto_create_whep = true
#
# Default: -1
# -1: disable
# 0: immediately destroy
# >= 1: delay millisecond
# Auto a destroy a stream at no pub
# auto_delete_whip = 60000
# Auto a destroy a stream at no sub
# auto_delete_whep = 60000

# Experimental Feature
# [webhook]
# webhooks = ["http://127.0.0.1:8080/webhook?token="]

# Default enabled `--features=net4mqtt`
# [net4mqtt]
# Global unique alias
# alias = "liveion-0"
# `client_id={alias}` use alias as MQTT `client_id`
# mqtt_url = "mqtt://localhost:1883/net4mqtt?client_id={alias}"
