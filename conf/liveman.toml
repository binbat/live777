[http]
# Http Server Listen Address
# listen = "[::]:8888"
# Cross-Origin Resource Sharing (CORS)
# reference: https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS
# cors = false
# Cascade need proxy all request, each node can connect this address
# public = "http://localhost:8888"

# WHIP/WHEP auth token
# Headers["Authorization"] = "Bearer {token}"
# [auth]
# JSON WEB TOKEN secret
# secret = "<jwt_secret>"
# static JWT token, superadmin, debuggger can use this token
# tokens = ["live777"]

# Admin Dashboard Accounts
# [[auth.accounts]]
# username = "live777"
# password = "live777"

# [extra_ice]
# When WHIP/WHEP use liveman proxy
# liveman override upstream liveion http header link ice_servers
# override_upstream_ice_servers = false

# [[extra_ice.ice_servers]]
# urls = [
#     "stun:stun.22333.fun",
#     "stun:cn.22333.fun",
#     "stun:stun.l.google.com:19302",
# ]

# [[extra_ice.ice_servers]]
# urls = [ "turn:turn.22333.fun", "turn:cn.22333.fun" ]
# username = "live777"
# credential = "live777"

# [extra_ice.coturn]
# Coturn must use: --use-auth-secret
# The secret is: --static-auth-secret=live777
# secret = "live777"
# urls = [
#     "stun:coturn.22333.fun:3478",
#     "turn:coturn.22333.fun:3478?transport=udp",
#     "turn:coturn.22333.fun:3478?transport=tcp",
# ]
# ttl = 3600

# [extra_ice.cloudflare]
# # https://developers.cloudflare.com/realtime/turn/generate-credentials/
# key_id = ""
# api_token = ""
# ttl = 3600

[log]
# Env: `LOG_LEVEL`
# Default: info
# Values: off, error, warn, info, debug, trace
# level = "warn"

[cascade]
# When a new whep beginning, and trigger cascade, check cascade status done times
# Every times check after wait 100ms. If Mare than 5 * 500ms return error
# check_attempts = 5
# Check cluster all node cascade status time interval
# Default: 60s
# check_tick_time = 60000
# If cascade is working, but no consumer subscription, This cascade status is: `idle`
# When status `idle` more than this time duration, close this cascade.
# Default: 60s
# maximum_idle_time = 60000
# When cascade is working, close src server not cascade push session subscription
# close_other_sub = false
# Cascade operating mode
# Options: "push" or "pull". Determines whether cascade operates in push mode or pull mode.
# Default is "push"
# mode = "pull"

# [net4mqtt]
# Global unique alias
# alias = "liveman-0"
# `client_id={alias}` use alias as MQTT `client_id`
# mqtt_url = "mqtt://localhost:1883/net4mqtt?client_id={alias}"
# listen = "127.0.0.1:1077"
# domain = "net4mqtt.local"

# Database configuration for recording index storage
[database]
# Default database URL (SQLite). Env: DATABASE_URL
# Default: sqlite://./liveman.db
url = "sqlite://./liveman.db?mode=rwc"
# Maximum number of database connections (Default: 10)
max_connections = 10
# Connection timeout in seconds (Default: 30)
connect_timeout = 30

# Example for PostgreSQL:
# [database]
# url = "postgresql://user:password@localhost:5432/live777"
# max_connections = 10
# connect_timeout = 30

# File storage configuration for accessing recorded segments
# This allows Liveman to serve recorded segments for playback and proxy objects
[recorder]

[recorder.storage]
# Storage type: "fs" for local filesystem; also supports "oss" (Alibaba Cloud OSS) and "s3"
type = "fs"
# Root path for local filesystem
root = "./records"

# Example: Alibaba Cloud OSS storage
# type = "oss"
# bucket = "my-oss-bucket"
# root = "/recordings"
# region = "oss-cn-hangzhou"
# endpoint = "https://oss-cn-hangzhou.aliyuncs.com"
# access_key_id = "your-access-key"
# access_key_secret = "your-access-secret"

# Liveman auto recording configuration (manager-driven)
[auto_record]
# Enable Liveman-driven auto recording
enabled = true
# Stream name patterns to record; supports glob
auto_streams = ["*"]
# Optional base directory prefix for date-based layout, e.g., "recordings"
# base_prefix = ""
# Interval to check streams and trigger recording (ms)
# tick_ms = 5000
# Rotate at local midnight automatically
# rotate_daily = true
# Timezone offset minutes for rotation (e.g. 480 for UTC+8)
# rotate_tz_offset_minutes = 0

# [[nodes]]
# Globally unique id
# alias = "static-0"
# Auth token
# token = "live777"
# Live777 Address
# url = "http://127.0.0.1:7777"

# [[nodes]]
# alias = "static-1"
# token = "live777"
# url = "http://127.0.0.1:7778"

# [[nodes]]
# Globally unique id
# alias = "static-0"
# Auth token
# token = "live777"
# Live777 Address
# url = "http://liveion-0.net4mqtt.local:7777"
