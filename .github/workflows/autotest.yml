name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      matrix:
        os: [ macos-latest, windows-latest, ubuntu-latest ]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
      - name: Build
        run: cargo build --verbose
      - name: Run tests
        run: cargo test --verbose

  check_clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Cargo clippy
        run: cargo clippy --all-targets --all-features --workspace -- -D warnings

  multirun:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Build and push docker-server
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          file: ./Dockerfile.server
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Build and push docker-client
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          file: ./Dockerfile.client
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Run Multirun Script
        run: |
          chmod +x multirun.sh
          ./multirun.sh live777 &&
          ./multirun.sh cargo run --package=whipinto -- -c vp8 -u http://localhost:3000/whip/777 --command 'ffmpeg -re -f lavfi -i testsrc=size=640x480:rate=30 -vcodec libvpx -cpu-used 5 -deadline 1 -g 10 -error-resilient 1 -auto-alt-ref 1 -f rtp "rtp://127.0.0.1:{port}?pkt_size=1200"' &&
          ./multirun.sh cargo run --package=whepfrom -- -c vp8 -u http://localhost:3000/whep/777 -t 127.0.0.1:5004 --command 'ffplay -protocol_whitelist rtp,file,udp -i stream.sdp'
